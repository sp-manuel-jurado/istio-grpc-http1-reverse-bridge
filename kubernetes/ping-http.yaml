# ping-http service
#
# routes:
# - /ping
# - /sp.rpc.PingService/Ping (understand protocol buffers + envoy grpc http1 reverse bridge compatible)
#
# syntax = "proto3";
# package sp.rpc;
# import "google/protobuf/empty.proto";
# service PingService {
#     rpc Ping(google.protobuf.Empty) returns (google.protobuf.Empty);
# }
---
apiVersion: v1
kind: Service
metadata:
  name: ping-http
  namespace: lab-test
  labels:
    app: ping-http
spec:
  ports:
  - port: 8888
    name: http
  selector:
    app: ping-http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ping-http
  namespace: lab-test
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ping-http
  template:
    metadata:
      labels:
        app: ping-http
    spec:
      containers:
      - name: ping-http
        image: docker.io/spmanueljurado/ping-http:latest
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
        imagePullPolicy: Always
        ports:
        - containerPort: 8888
